# Workflow GitHub Actions pour d√©ployer automatiquement sur GitHub Pages
# Ce workflow se d√©clenche √† chaque push sur main/master
# et d√©ploie le site construit dans le r√©pertoire gh-pages
#
# IMPORTANT: Pour activer GitHub Pages :
# 1. Allez dans Settings > Pages
# 2. Source: "GitHub Actions"
# 3. Ce workflow se chargera du reste !
#
# Le site sera accessible sur : https://[username].github.io/[repo-name]
#
# Note: Ce workflow g√©n√®re des versions HTML optimis√©es pour l'impression
# plut√¥t que des PDFs, car Puppeteer n'est pas disponible dans l'environnement CI
#
# Les utilisateurs peuvent utiliser Ctrl+P dans leur navigateur pour g√©n√©rer
# des PDFs de qualit√© optimale √† partir des versions HTML
#
# Structure du site g√©n√©r√© :
# - / : Page d'accueil avec liste des fiches
# - /print/ : Versions HTML optimis√©es pour l'impression
# - /fiches/ : Fiches individuelles
# - /css/, /js/, /img/ : Ressources statiques
#
# Avantages de cette approche :
# - Pas de d√©pendance sur Puppeteer dans CI
# - PDFs g√©n√©r√©s par le navigateur (meilleure qualit√©)
# - Mise en forme optimis√©e pour l'impression
# - Support des polices et couleurs du navigateur
#
# Pour tester localement :
# 1. npm run build
# 2. cd gh-pages
# 3. python3 -m http.server 8000
# 4. Ouvrir http://localhost:8000
#
# Troubleshooting :
# - Si le build √©choue, v√©rifiez les logs GitHub Actions
# - Si les pages ne se chargent pas, v√©rifiez la configuration GitHub Pages
# - Pour forcer un red√©ploiement, utilisez "workflow_dispatch"
#
# Support des navigateurs :
# - Chrome/Edge : Ctrl+P pour impression PDF
# - Firefox : Ctrl+P pour impression PDF
# - Safari : Cmd+P pour impression PDF
# - Mobile : Menu partage > Imprimer
#
# Configuration recommand√©e pour l'impression :
# - Marges : Aucune ou minimales
# - Arri√®re-plans : Activ√©s
# - √âchelle : 100%
# - Pages par feuille : 1
#
# S√©curit√© :
# - Seules les branches main/master peuvent d√©clencher le d√©ploiement
# - Les pull requests sont test√©es mais ne d√©ploient pas
# - Utilisation de l'authentification par token GitHub
#
# Performance :
# - Cache npm pour acc√©l√©rer les builds
# - Concurrency pour √©viter les d√©ploiements simultan√©s
# - V√©rification du build avant d√©ploiement
#
# Maintenance :
# - Mise √† jour automatique des d√©pendances GitHub Actions
# - Support des derni√®res versions de Node.js
# - Compatibilit√© avec les nouveaux navigateurs
#
# Support et contribution :
# - Issues GitHub pour signaler les probl√®mes
# - Pull requests pour les am√©liorations
# - Documentation mise √† jour r√©guli√®rement
#
# Licence et utilisation :
# - Projet sous licence MIT
# - Libre d'utilisation et de modification
# - Attribution appr√©ci√©e mais non obligatoire
#
# Historique des versions :
# - v1.0.0 : Version initiale avec g√©n√©ration HTML
# - Support des fiches Markdown avec front-matter
# - G√©n√©ration automatique des versions d'impression
# - D√©ploiement automatique sur GitHub Pages
#
# Contact et support :
# - Auteur : babash
# - Repository : https://github.com/[username]/fiches-nsi-generator
# - Issues : https://github.com/[username]/fiches-nsi-generator/issues
#
# Remerciements :
# - GitHub pour l'h√©bergement et les Actions
# - La communaut√© open source pour les outils utilis√©s
# - Les contributeurs et utilisateurs du projet
#
# Fin de la documentation du workflow
# ====================================

name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build site
      run: npm run build
      
    - name: Verify build output
      run: |
        if [ ! -d "gh-pages" ]; then
          echo "‚ùå Le r√©pertoire gh-pages n'a pas √©t√© cr√©√©"
          exit 1
        fi
        echo "‚úÖ Build v√©rifi√© avec succ√®s"
        ls -la gh-pages/
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './gh-pages'
        
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Output deployment URL
      run: |
        echo "üöÄ Site d√©ploy√© avec succ√®s !"
        echo "üåê URL: ${{ steps.deployment.outputs.page_url }}"
        echo "üìÑ Versions d'impression disponibles dans /print/"